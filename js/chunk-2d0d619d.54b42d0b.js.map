{"version":3,"sources":["webpack:///./node_modules/dom-to-image/src/dom-to-image.js"],"names":["global","util","newUtil","inliner","newInliner","fontFaces","newFontFaces","images","newImages","defaultOptions","imagePlaceholder","undefined","cacheBust","domtoimage","toSvg","toPng","toJpeg","toBlob","toPixelData","impl","options","node","copyOptions","Promise","resolve","then","cloneNode","filter","embedFonts","inlineImages","applyOptions","clone","makeSvgDataUri","width","height","bgcolor","style","backgroundColor","Object","keys","forEach","property","draw","canvas","getContext","getImageData","data","toDataURL","quality","canvasToBlob","domNode","makeImage","delay","image","newCanvas","drawImage","document","createElement","ctx","fillStyle","fillRect","root","makeNodeCopy","cloneChildren","processClone","HTMLCanvasElement","original","children","childNodes","length","cloneChildrenInOrder","asArray","parent","done","child","childClone","appendChild","Element","cloneStyle","clonePseudoElements","copyUserInput","fixSvg","copyStyle","source","target","copyProperties","name","setProperty","getPropertyValue","getPropertyPriority","cssText","window","getComputedStyle","clonePseudoElement","element","content","className","uid","styleElement","formatPseudoElementStyle","selector","formatCssText","formatCssProperties","createTextNode","map","formatProperty","join","HTMLTextAreaElement","innerHTML","value","HTMLInputElement","setAttribute","SVGElement","SVGRectElement","attribute","getAttribute","resolveAll","styleNode","inlineAll","XMLSerializer","serializeToString","escapeXhtml","xhtml","foreignObject","svg","escape","parseExtension","mimeType","dataAsUrl","isDataUrl","resolveUrl","getAndEncode","mimes","WOFF","JPEG","url","match","exec","extension","toLowerCase","search","binaryString","atob","split","binaryArray","Uint8Array","i","charCodeAt","Blob","type","baseUrl","doc","implementation","createHTMLDocument","base","head","a","body","href","index","fourRandomChars","Math","random","pow","toString","slice","uri","reject","Image","onload","onerror","src","TIMEOUT","test","Date","getTime","placeholder","request","XMLHttpRequest","onreadystatechange","ontimeout","timeout","responseType","open","send","readyState","status","encoder","FileReader","onloadend","result","readAsDataURL","response","fail","message","console","error","string","replace","ms","arg","setTimeout","arrayLike","array","push","leftBorder","px","rightBorder","scrollWidth","topBorder","bottomBorder","scrollHeight","styleProperty","parseFloat","URL_REGEX","shouldProcess","readUrls","inline","get","dataUrl","urlAsRegex","RegExp","nothingToInline","urls","readAll","webFonts","all","webFont","cssStrings","styleSheets","getCssRules","selectWebFontRules","rules","newWebFont","cssRules","rule","CSSRule","FONT_FACE_RULE","sheet","bind","e","log","webFontRule","parentStyleSheet","newImage","inlineBackground","HTMLImageElement","background","inlined","module","exports"],"mappings":"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","file":"js/chunk-2d0d619d.54b42d0b.js","sourcesContent":["(function (global) {\n    'use strict';\n\n    var util = newUtil();\n    var inliner = newInliner();\n    var fontFaces = newFontFaces();\n    var images = newImages();\n\n    // Default impl options\n    var defaultOptions = {\n        // Default is to fail on error, no placeholder\n        imagePlaceholder: undefined,\n        // Default cache bust is false, it will use the cache\n        cacheBust: false\n    };\n\n    var domtoimage = {\n        toSvg: toSvg,\n        toPng: toPng,\n        toJpeg: toJpeg,\n        toBlob: toBlob,\n        toPixelData: toPixelData,\n        impl: {\n            fontFaces: fontFaces,\n            images: images,\n            util: util,\n            inliner: inliner,\n            options: {}\n        }\n    };\n\n    if (typeof module !== 'undefined')\n        module.exports = domtoimage;\n    else\n        global.domtoimage = domtoimage;\n\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options\n     * @param {Function} options.filter - Should return true if passed node should be included in the output\n     *          (excluding node means excluding it's children as well). Not called on the root node.\n     * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n     * @param {Number} options.width - width to be applied to node before rendering.\n     * @param {Number} options.height - height to be applied to node before rendering.\n     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n                defaults to 1.0.\n     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n     * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n     * */\n    function toSvg(node, options) {\n        options = options || {};\n        copyOptions(options);\n        return Promise.resolve(node)\n            .then(function (node) {\n                return cloneNode(node, options.filter, true);\n            })\n            .then(embedFonts)\n            .then(inlineImages)\n            .then(applyOptions)\n            .then(function (clone) {\n                return makeSvgDataUri(clone,\n                    options.width || util.width(node),\n                    options.height || util.height(node)\n                );\n            });\n\n        function applyOptions(clone) {\n            if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n\n            if (options.width) clone.style.width = options.width + 'px';\n            if (options.height) clone.style.height = options.height + 'px';\n\n            if (options.style)\n                Object.keys(options.style).forEach(function (property) {\n                    clone.style[property] = options.style[property];\n                });\n\n            return clone;\n        }\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n     * */\n    function toPixelData(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.getContext('2d').getImageData(\n                    0,\n                    0,\n                    util.width(node),\n                    util.height(node)\n                ).data;\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n     * */\n    function toPng(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.toDataURL();\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n     * */\n    function toJpeg(node, options) {\n        options = options || {};\n        return draw(node, options)\n            .then(function (canvas) {\n                return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image blob\n     * */\n    function toBlob(node, options) {\n        return draw(node, options || {})\n            .then(util.canvasToBlob);\n    }\n\n    function copyOptions(options) {\n        // Copy options to impl options for use in impl\n        if(typeof(options.imagePlaceholder) === 'undefined') {\n            domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n        } else {\n            domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n        }\n\n        if(typeof(options.cacheBust) === 'undefined') {\n            domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n        } else {\n            domtoimage.impl.options.cacheBust = options.cacheBust;\n        }\n    }\n\n    function draw(domNode, options) {\n        return toSvg(domNode, options)\n            .then(util.makeImage)\n            .then(util.delay(100))\n            .then(function (image) {\n                var canvas = newCanvas(domNode);\n                canvas.getContext('2d').drawImage(image, 0, 0);\n                return canvas;\n            });\n\n        function newCanvas(domNode) {\n            var canvas = document.createElement('canvas');\n            canvas.width = options.width || util.width(domNode);\n            canvas.height = options.height || util.height(domNode);\n\n            if (options.bgcolor) {\n                var ctx = canvas.getContext('2d');\n                ctx.fillStyle = options.bgcolor;\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            }\n\n            return canvas;\n        }\n    }\n\n    function cloneNode(node, filter, root) {\n        if (!root && filter && !filter(node)) return Promise.resolve();\n\n        return Promise.resolve(node)\n            .then(makeNodeCopy)\n            .then(function (clone) {\n                return cloneChildren(node, clone, filter);\n            })\n            .then(function (clone) {\n                return processClone(node, clone);\n            });\n\n        function makeNodeCopy(node) {\n            if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\n            return node.cloneNode(false);\n        }\n\n        function cloneChildren(original, clone, filter) {\n            var children = original.childNodes;\n            if (children.length === 0) return Promise.resolve(clone);\n\n            return cloneChildrenInOrder(clone, util.asArray(children), filter)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneChildrenInOrder(parent, children, filter) {\n                var done = Promise.resolve();\n                children.forEach(function (child) {\n                    done = done\n                        .then(function () {\n                            return cloneNode(child, filter);\n                        })\n                        .then(function (childClone) {\n                            if (childClone) parent.appendChild(childClone);\n                        });\n                });\n                return done;\n            }\n        }\n\n        function processClone(original, clone) {\n            if (!(clone instanceof Element)) return clone;\n\n            return Promise.resolve()\n                .then(cloneStyle)\n                .then(clonePseudoElements)\n                .then(copyUserInput)\n                .then(fixSvg)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneStyle() {\n                copyStyle(window.getComputedStyle(original), clone.style);\n\n                function copyStyle(source, target) {\n                    if (source.cssText) target.cssText = source.cssText;\n                    else copyProperties(source, target);\n\n                    function copyProperties(source, target) {\n                        util.asArray(source).forEach(function (name) {\n                            target.setProperty(\n                                name,\n                                source.getPropertyValue(name),\n                                source.getPropertyPriority(name)\n                            );\n                        });\n                    }\n                }\n            }\n\n            function clonePseudoElements() {\n                [':before', ':after'].forEach(function (element) {\n                    clonePseudoElement(element);\n                });\n\n                function clonePseudoElement(element) {\n                    var style = window.getComputedStyle(original, element);\n                    var content = style.getPropertyValue('content');\n\n                    if (content === '' || content === 'none') return;\n\n                    var className = util.uid();\n                    clone.className = clone.className + ' ' + className;\n                    var styleElement = document.createElement('style');\n                    styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n                    clone.appendChild(styleElement);\n\n                    function formatPseudoElementStyle(className, element, style) {\n                        var selector = '.' + className + ':' + element;\n                        var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\n                        return document.createTextNode(selector + '{' + cssText + '}');\n\n                        function formatCssText(style) {\n                            var content = style.getPropertyValue('content');\n                            return style.cssText + ' content: ' + content + ';';\n                        }\n\n                        function formatCssProperties(style) {\n\n                            return util.asArray(style)\n                                .map(formatProperty)\n                                .join('; ') + ';';\n\n                            function formatProperty(name) {\n                                return name + ': ' +\n                                    style.getPropertyValue(name) +\n                                    (style.getPropertyPriority(name) ? ' !important' : '');\n                            }\n                        }\n                    }\n                }\n            }\n\n            function copyUserInput() {\n                if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\n                if (original instanceof HTMLInputElement) clone.setAttribute(\"value\", original.value);\n            }\n\n            function fixSvg() {\n                if (!(clone instanceof SVGElement)) return;\n                clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n                if (!(clone instanceof SVGRectElement)) return;\n                ['width', 'height'].forEach(function (attribute) {\n                    var value = clone.getAttribute(attribute);\n                    if (!value) return;\n\n                    clone.style.setProperty(attribute, value);\n                });\n            }\n        }\n    }\n\n    function embedFonts(node) {\n        return fontFaces.resolveAll()\n            .then(function (cssText) {\n                var styleNode = document.createElement('style');\n                node.appendChild(styleNode);\n                styleNode.appendChild(document.createTextNode(cssText));\n                return node;\n            });\n    }\n\n    function inlineImages(node) {\n        return images.inlineAll(node)\n            .then(function () {\n                return node;\n            });\n    }\n\n    function makeSvgDataUri(node, width, height) {\n        return Promise.resolve(node)\n            .then(function (node) {\n                node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n                return new XMLSerializer().serializeToString(node);\n            })\n            .then(util.escapeXhtml)\n            .then(function (xhtml) {\n                return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\n            })\n            .then(function (foreignObject) {\n                return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' +\n                    foreignObject + '</svg>';\n            })\n            .then(function (svg) {\n                return 'data:image/svg+xml;charset=utf-8,' + svg;\n            });\n    }\n\n    function newUtil() {\n        return {\n            escape: escape,\n            parseExtension: parseExtension,\n            mimeType: mimeType,\n            dataAsUrl: dataAsUrl,\n            isDataUrl: isDataUrl,\n            canvasToBlob: canvasToBlob,\n            resolveUrl: resolveUrl,\n            getAndEncode: getAndEncode,\n            uid: uid(),\n            delay: delay,\n            asArray: asArray,\n            escapeXhtml: escapeXhtml,\n            makeImage: makeImage,\n            width: width,\n            height: height\n        };\n\n        function mimes() {\n            /*\n             * Only WOFF and EOT mime types for fonts are 'real'\n             * see http://www.iana.org/assignments/media-types/media-types.xhtml\n             */\n            var WOFF = 'application/font-woff';\n            var JPEG = 'image/jpeg';\n\n            return {\n                'woff': WOFF,\n                'woff2': WOFF,\n                'ttf': 'application/font-truetype',\n                'eot': 'application/vnd.ms-fontobject',\n                'png': 'image/png',\n                'jpg': JPEG,\n                'jpeg': JPEG,\n                'gif': 'image/gif',\n                'tiff': 'image/tiff',\n                'svg': 'image/svg+xml'\n            };\n        }\n\n        function parseExtension(url) {\n            var match = /\\.([^\\.\\/]*?)$/g.exec(url);\n            if (match) return match[1];\n            else return '';\n        }\n\n        function mimeType(url) {\n            var extension = parseExtension(url).toLowerCase();\n            return mimes()[extension] || '';\n        }\n\n        function isDataUrl(url) {\n            return url.search(/^(data:)/) !== -1;\n        }\n\n        function toBlob(canvas) {\n            return new Promise(function (resolve) {\n                var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n                var length = binaryString.length;\n                var binaryArray = new Uint8Array(length);\n\n                for (var i = 0; i < length; i++)\n                    binaryArray[i] = binaryString.charCodeAt(i);\n\n                resolve(new Blob([binaryArray], {\n                    type: 'image/png'\n                }));\n            });\n        }\n\n        function canvasToBlob(canvas) {\n            if (canvas.toBlob)\n                return new Promise(function (resolve) {\n                    canvas.toBlob(resolve);\n                });\n\n            return toBlob(canvas);\n        }\n\n        function resolveUrl(url, baseUrl) {\n            var doc = document.implementation.createHTMLDocument();\n            var base = doc.createElement('base');\n            doc.head.appendChild(base);\n            var a = doc.createElement('a');\n            doc.body.appendChild(a);\n            base.href = baseUrl;\n            a.href = url;\n            return a.href;\n        }\n\n        function uid() {\n            var index = 0;\n\n            return function () {\n                return 'u' + fourRandomChars() + index++;\n\n                function fourRandomChars() {\n                    /* see http://stackoverflow.com/a/6248722/2519373 */\n                    return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n                }\n            };\n        }\n\n        function makeImage(uri) {\n            return new Promise(function (resolve, reject) {\n                var image = new Image();\n                image.onload = function () {\n                    resolve(image);\n                };\n                image.onerror = reject;\n                image.src = uri;\n            });\n        }\n\n        function getAndEncode(url) {\n            var TIMEOUT = 30000;\n            if(domtoimage.impl.options.cacheBust) {\n                // Cache bypass so we dont have CORS issues with cached images\n                // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                url += ((/\\?/).test(url) ? \"&\" : \"?\") + (new Date()).getTime();\n            }\n\n            return new Promise(function (resolve) {\n                var request = new XMLHttpRequest();\n\n                request.onreadystatechange = done;\n                request.ontimeout = timeout;\n                request.responseType = 'blob';\n                request.timeout = TIMEOUT;\n                request.open('GET', url, true);\n                request.send();\n\n                var placeholder;\n                if(domtoimage.impl.options.imagePlaceholder) {\n                    var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n                    if(split && split[1]) {\n                        placeholder = split[1];\n                    }\n                }\n\n                function done() {\n                    if (request.readyState !== 4) return;\n\n                    if (request.status !== 200) {\n                        if(placeholder) {\n                            resolve(placeholder);\n                        } else {\n                            fail('cannot fetch resource: ' + url + ', status: ' + request.status);\n                        }\n\n                        return;\n                    }\n\n                    var encoder = new FileReader();\n                    encoder.onloadend = function () {\n                        var content = encoder.result.split(/,/)[1];\n                        resolve(content);\n                    };\n                    encoder.readAsDataURL(request.response);\n                }\n\n                function timeout() {\n                    if(placeholder) {\n                        resolve(placeholder);\n                    } else {\n                        fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\n                    }\n                }\n\n                function fail(message) {\n                    console.error(message);\n                    resolve('');\n                }\n            });\n        }\n\n        function dataAsUrl(content, type) {\n            return 'data:' + type + ';base64,' + content;\n        }\n\n        function escape(string) {\n            return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n        }\n\n        function delay(ms) {\n            return function (arg) {\n                return new Promise(function (resolve) {\n                    setTimeout(function () {\n                        resolve(arg);\n                    }, ms);\n                });\n            };\n        }\n\n        function asArray(arrayLike) {\n            var array = [];\n            var length = arrayLike.length;\n            for (var i = 0; i < length; i++) array.push(arrayLike[i]);\n            return array;\n        }\n\n        function escapeXhtml(string) {\n            return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n        }\n\n        function width(node) {\n            var leftBorder = px(node, 'border-left-width');\n            var rightBorder = px(node, 'border-right-width');\n            return node.scrollWidth + leftBorder + rightBorder;\n        }\n\n        function height(node) {\n            var topBorder = px(node, 'border-top-width');\n            var bottomBorder = px(node, 'border-bottom-width');\n            return node.scrollHeight + topBorder + bottomBorder;\n        }\n\n        function px(node, styleProperty) {\n            var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n            return parseFloat(value.replace('px', ''));\n        }\n    }\n\n    function newInliner() {\n        var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n\n        return {\n            inlineAll: inlineAll,\n            shouldProcess: shouldProcess,\n            impl: {\n                readUrls: readUrls,\n                inline: inline\n            }\n        };\n\n        function shouldProcess(string) {\n            return string.search(URL_REGEX) !== -1;\n        }\n\n        function readUrls(string) {\n            var result = [];\n            var match;\n            while ((match = URL_REGEX.exec(string)) !== null) {\n                result.push(match[1]);\n            }\n            return result.filter(function (url) {\n                return !util.isDataUrl(url);\n            });\n        }\n\n        function inline(string, url, baseUrl, get) {\n            return Promise.resolve(url)\n                .then(function (url) {\n                    return baseUrl ? util.resolveUrl(url, baseUrl) : url;\n                })\n                .then(get || util.getAndEncode)\n                .then(function (data) {\n                    return util.dataAsUrl(data, util.mimeType(url));\n                })\n                .then(function (dataUrl) {\n                    return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\n                });\n\n            function urlAsRegex(url) {\n                return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\n            }\n        }\n\n        function inlineAll(string, baseUrl, get) {\n            if (nothingToInline()) return Promise.resolve(string);\n\n            return Promise.resolve(string)\n                .then(readUrls)\n                .then(function (urls) {\n                    var done = Promise.resolve(string);\n                    urls.forEach(function (url) {\n                        done = done.then(function (string) {\n                            return inline(string, url, baseUrl, get);\n                        });\n                    });\n                    return done;\n                });\n\n            function nothingToInline() {\n                return !shouldProcess(string);\n            }\n        }\n    }\n\n    function newFontFaces() {\n        return {\n            resolveAll: resolveAll,\n            impl: {\n                readAll: readAll\n            }\n        };\n\n        function resolveAll() {\n            return readAll(document)\n                .then(function (webFonts) {\n                    return Promise.all(\n                        webFonts.map(function (webFont) {\n                            return webFont.resolve();\n                        })\n                    );\n                })\n                .then(function (cssStrings) {\n                    return cssStrings.join('\\n');\n                });\n        }\n\n        function readAll() {\n            return Promise.resolve(util.asArray(document.styleSheets))\n                .then(getCssRules)\n                .then(selectWebFontRules)\n                .then(function (rules) {\n                    return rules.map(newWebFont);\n                });\n\n            function selectWebFontRules(cssRules) {\n                return cssRules\n                    .filter(function (rule) {\n                        return rule.type === CSSRule.FONT_FACE_RULE;\n                    })\n                    .filter(function (rule) {\n                        return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n                    });\n            }\n\n            function getCssRules(styleSheets) {\n                var cssRules = [];\n                styleSheets.forEach(function (sheet) {\n                    try {\n                        util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n                    } catch (e) {\n                        console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\n                    }\n                });\n                return cssRules;\n            }\n\n            function newWebFont(webFontRule) {\n                return {\n                    resolve: function resolve() {\n                        var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n                        return inliner.inlineAll(webFontRule.cssText, baseUrl);\n                    },\n                    src: function () {\n                        return webFontRule.style.getPropertyValue('src');\n                    }\n                };\n            }\n        }\n    }\n\n    function newImages() {\n        return {\n            inlineAll: inlineAll,\n            impl: {\n                newImage: newImage\n            }\n        };\n\n        function newImage(element) {\n            return {\n                inline: inline\n            };\n\n            function inline(get) {\n                if (util.isDataUrl(element.src)) return Promise.resolve();\n\n                return Promise.resolve(element.src)\n                    .then(get || util.getAndEncode)\n                    .then(function (data) {\n                        return util.dataAsUrl(data, util.mimeType(element.src));\n                    })\n                    .then(function (dataUrl) {\n                        return new Promise(function (resolve, reject) {\n                            element.onload = resolve;\n                            element.onerror = reject;\n                            element.src = dataUrl;\n                        });\n                    });\n            }\n        }\n\n        function inlineAll(node) {\n            if (!(node instanceof Element)) return Promise.resolve(node);\n\n            return inlineBackground(node)\n                .then(function () {\n                    if (node instanceof HTMLImageElement)\n                        return newImage(node).inline();\n                    else\n                        return Promise.all(\n                            util.asArray(node.childNodes).map(function (child) {\n                                return inlineAll(child);\n                            })\n                        );\n                });\n\n            function inlineBackground(node) {\n                var background = node.style.getPropertyValue('background');\n\n                if (!background) return Promise.resolve(node);\n\n                return inliner.inlineAll(background)\n                    .then(function (inlined) {\n                        node.style.setProperty(\n                            'background',\n                            inlined,\n                            node.style.getPropertyPriority('background')\n                        );\n                    })\n                    .then(function () {\n                        return node;\n                    });\n            }\n        }\n    }\n})(this);\n"],"sourceRoot":""}